@256
D=A
@SP
M=D
//writing call Sys.init
@Main.null$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Main.null$ret.1)
//writing function Main.T3
(Main.T3)
//writing call Main.t1
@Main.Main.T3$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t1
0;JMP
(Main.Main.T3$ret.2)
//writing call Main.t2
@Main.Main.T3$ret.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t2
0;JMP
(Main.Main.T3$ret.3)
//writing call Main.t3
@Main.Main.T3$ret.4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t3
0;JMP
(Main.Main.T3$ret.4)
//writing call Main.t4
@Main.Main.T3$ret.5
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t4
0;JMP
(Main.Main.T3$ret.5)
//write label WHILE
(Main.T3$WHILE)
//write goto WHILE
@Main.T3$WHILE
0;JMP
//writing return
@LCL
D=M
@frame
M=D
@5
D=A
@frame
D=M-D
A=D
D=M
@return_address
M=D
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@frame
D=M-1
A=D
D=M
@THAT
M=D
@2
D=A
@frame
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@frame
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@frame
D=M-D
A=D
D=M
@LCL
M=D
@return_address
A=M
0;JMP
//writing function Main.t1
(Main.t1)
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M
@SEC_NEGATIVE2.Main.t1
D;JLT
@SEC_POSITIVE2.Main.t1
D;JGT
@BOTH_SAME2.Main.t1
0;JMP
(SEC_NEGATIVE2.Main.t1)
@SP
A=M-1
A=A-1
D=M
@BOTH_SAME2.Main.t1
D;JLE
@DIFFERENT2.Main.t1
D;JGT
(SEC_POSITIVE2.Main.t1)
@SP
A=M-1
A=A-1
D=M
@BOTH_SAME2.Main.t1
D;JGE
@DIFFERENT2.Main.t1
D;JLT
(DIFFERENT2.Main.t1)
@SP
A=M-1
D=M
@TRUE2.Main.t1
D;JGT
@FALSE2.Main.t1
0;JMP
(BOTH_SAME2.Main.t1)
@SP
A=M-1
D=M
A=A-1
D=D-M
@TRUE2.Main.t1
D;JGT
(FALSE2.Main.t1)
@SP
A=M-1
A=A-1
M=0
@END2.Main.t1
0;JMP
(TRUE2.Main.t1)
@SP
A=M-1
A=A-1
M=-1
(END2.Main.t1)
@SP
M=M-1
//writing return
@LCL
D=M
@frame
M=D
@5
D=A
@frame
D=M-D
A=D
D=M
@return_address
M=D
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@frame
D=M-1
A=D
D=M
@THAT
M=D
@2
D=A
@frame
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@frame
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@frame
D=M-D
A=D
D=M
@LCL
M=D
@return_address
A=M
0;JMP
//writing function Main.t2
(Main.t2)
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//gt
@SP
A=M-1
D=M
@SEC_NEGATIVE5.Main.t2
D;JLT
@SEC_POSITIVE5.Main.t2
D;JGT
@BOTH_SAME5.Main.t2
0;JMP
(SEC_NEGATIVE5.Main.t2)
@SP
A=M-1
A=A-1
D=M
@BOTH_SAME5.Main.t2
D;JLE
@DIFFERENT5.Main.t2
D;JGT
(SEC_POSITIVE5.Main.t2)
@SP
A=M-1
A=A-1
D=M
@BOTH_SAME5.Main.t2
D;JGE
@DIFFERENT5.Main.t2
D;JLT
(DIFFERENT5.Main.t2)
@SP
A=M-1
D=M
@TRUE5.Main.t2
D;JLT
@FALSE5.Main.t2
0;JMP
(BOTH_SAME5.Main.t2)
@SP
A=M-1
D=M
A=A-1
D=D-M
@TRUE5.Main.t2
D;JLT
(FALSE5.Main.t2)
@SP
A=M-1
A=A-1
M=0
@END5.Main.t2
0;JMP
(TRUE5.Main.t2)
@SP
A=M-1
A=A-1
M=-1
(END5.Main.t2)
@SP
M=M-1
//writing return
@LCL
D=M
@frame
M=D
@5
D=A
@frame
D=M-D
A=D
D=M
@return_address
M=D
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@frame
D=M-1
A=D
D=M
@THAT
M=D
@2
D=A
@frame
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@frame
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@frame
D=M-D
A=D
D=M
@LCL
M=D
@return_address
A=M
0;JMP
//writing function Main.t3
(Main.t3)
//push constant 20000
@20000
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//push constant 30000
@30000
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M
@SEC_NEGATIVE8.Main.t3
D;JLT
@SEC_POSITIVE8.Main.t3
D;JGT
@BOTH_SAME8.Main.t3
0;JMP
(SEC_NEGATIVE8.Main.t3)
@SP
A=M-1
A=A-1
D=M
@BOTH_SAME8.Main.t3
D;JLE
@DIFFERENT8.Main.t3
D;JGT
(SEC_POSITIVE8.Main.t3)
@SP
A=M-1
A=A-1
D=M
@BOTH_SAME8.Main.t3
D;JGE
@DIFFERENT8.Main.t3
D;JLT
(DIFFERENT8.Main.t3)
@SP
A=M-1
D=M
@TRUE8.Main.t3
D;JLT
@FALSE8.Main.t3
0;JMP
(BOTH_SAME8.Main.t3)
@SP
A=M-1
D=M
A=A-1
D=D-M
@TRUE8.Main.t3
D;JLT
(FALSE8.Main.t3)
@SP
A=M-1
A=A-1
M=0
@END8.Main.t3
0;JMP
(TRUE8.Main.t3)
@SP
A=M-1
A=A-1
M=-1
(END8.Main.t3)
@SP
M=M-1
//writing return
@LCL
D=M
@frame
M=D
@5
D=A
@frame
D=M-D
A=D
D=M
@return_address
M=D
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@frame
D=M-1
A=D
D=M
@THAT
M=D
@2
D=A
@frame
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@frame
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@frame
D=M-D
A=D
D=M
@LCL
M=D
@return_address
A=M
0;JMP
//writing function Main.t4
(Main.t4)
//push constant 20000
@20000
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30000
@30000
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//gt
@SP
A=M-1
D=M
@SEC_NEGATIVE11.Main.t4
D;JLT
@SEC_POSITIVE11.Main.t4
D;JGT
@BOTH_SAME11.Main.t4
0;JMP
(SEC_NEGATIVE11.Main.t4)
@SP
A=M-1
A=A-1
D=M
@BOTH_SAME11.Main.t4
D;JLE
@DIFFERENT11.Main.t4
D;JGT
(SEC_POSITIVE11.Main.t4)
@SP
A=M-1
A=A-1
D=M
@BOTH_SAME11.Main.t4
D;JGE
@DIFFERENT11.Main.t4
D;JLT
(DIFFERENT11.Main.t4)
@SP
A=M-1
D=M
@TRUE11.Main.t4
D;JLT
@FALSE11.Main.t4
0;JMP
(BOTH_SAME11.Main.t4)
@SP
A=M-1
D=M
A=A-1
D=D-M
@TRUE11.Main.t4
D;JLT
(FALSE11.Main.t4)
@SP
A=M-1
A=A-1
M=0
@END11.Main.t4
0;JMP
(TRUE11.Main.t4)
@SP
A=M-1
A=A-1
M=-1
(END11.Main.t4)
@SP
M=M-1
//writing return
@LCL
D=M
@frame
M=D
@5
D=A
@frame
D=M-D
A=D
D=M
@return_address
M=D
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@frame
D=M-1
A=D
D=M
@THAT
M=D
@2
D=A
@frame
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@frame
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@frame
D=M-D
A=D
D=M
@LCL
M=D
@return_address
A=M
0;JMP
//writing function Sys.init
(Sys.init)
//writing call Main.T3
@Sys.Sys.init$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.T3
0;JMP
(Sys.Sys.init$ret.1)
//write label WHILE
(Sys.init$WHILE)
//write goto WHILE
@Sys.init$WHILE
0;JMP
